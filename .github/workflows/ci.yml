name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build test image
      uses: docker/build-push-action@v5
      with:
        context: .
        target: builder
        push: false
        load: true
        tags: ms-boilerplate-test:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Run lint checks
      run: |
        docker run --rm \
          --mount type=bind,source=${{ github.workspace }},target=/app \
          --workdir /app \
          ms-boilerplate-test:${{ github.sha }} \
          bash -c "poetry install && poetry run lint"

    - name: Run unit tests
      run: |
        docker run --rm \
          --mount type=bind,source=${{ github.workspace }},target=/app \
          --workdir /app \
          ms-boilerplate-test:${{ github.sha }} \
          bash -c "poetry install && poetry run unittest"

    - name: Run security scan
      run: |
        docker run --rm \
          --mount type=bind,source=${{ github.workspace }},target=/app \
          --workdir /app \
          ms-boilerplate-test:${{ github.sha }} \
          bash -c "poetry install && poetry run scan"

    - name: Build App image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: true
        tags: ms-boilerplate:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    # This step is needed to properly handle the cache
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
